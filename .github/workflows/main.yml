#
#
# BOF
---

name: Deployment workflow 
run-name: Creation deployment workflow run by ${{ github.actor }}
on:
  push:
    branches: [ main, protected ]
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

# Relative paths will be under the $GITHUB_WORKSPACE directory
env:
  MAVEN_CODE_PATH: ./maven
  MAVEN_SERVER_ID: github
  MAVEN_REGISTRY_URL: https://maven.pkg.github.com
  
defaults:
  run: 
    shell: bash

jobs:
  #
  preparation:
    runs-on: ubuntu-latest
    # 
    steps:
      ## ---------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v3
  #
  release:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    needs: [ preparation ]
    #
    steps: 
      ## ---------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v3
      ## ---------------------------------------------------
      - name: Java Development Kit setup
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven
          server-id: ${{ env.MAVEN_SERVER_ID }}
    ## ---------------------------------------------------
      - name: Version
        id: releaseVersion
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: minor
          WITH_V: false
          PRERELEASE: true
      ## ---------------------------------------------------
      - name: Publish Package
        id: publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ${{ env.MAVEN_CODE_PATH }}
          mvn versions:set -DnewVersion=${{ steps.releaseVersion.outputs.tag }}
          mvn --batch-mode deploy -DaltDeploymentRepository=${{ env.MAVEN_SERVER_ID }}::default::${{ env.MAVEN_REGISTRY_URL }}/${{ github.repository }} 
      - name: Create Relase
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.MAVEN_CODE_PATH }}/target/*.jar"
          generateReleaseNotes: true
          tag: ${{ steps.releaseVersion.outputs.tag }}
  #
  deployment:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [ preparation ]
    environment: Prd
    #
    steps:
      ## ---------------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v3

...
# EOF